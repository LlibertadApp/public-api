name: Deploy uat branch

on:
  push:
    branches:
      - uat

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment: uat
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build .env with Python
      run: |
        VARIABLES_JSON='{
          "DATABASE_RO_HOST": "${{ vars.DATABASE_RO_HOST }}",
          "DATABASE_RW_HOST": "${{ vars.DATABASE_RW_HOST }}",
          "DATABASE_PORT": "${{ vars.DATABASE_PORT }}",
          "DATABASE_USER": "${{ vars.DATABASE_USER }}",
          "DATABASE_PASS": "${{ secrets.DATABASE_PASS }}",
          "DATABASE_DB": "${{ vars.DATABASE_DB }}",
          "DATABASE_LOGGING": "${{ vars.DATABASE_LOGGING }}",
          "DATABASE_SYNC": "${{ vars.DATABASE_SYNC }}",
          "DATABASE_TYPE": "${{ vars.DATABASE_TYPE }}",
          "LBERTAPP_ENV": "${{ vars.LBERTAPP_ENV }}",
          "SQS_QUEUE_ARN": "${{ vars.SQS_QUEUE_ARN }}"
        }'
        python3 dotEnvGenerator.py "$VARIABLES_JSON"
        cat .env

    - name: Perform a Clean Install
      run: npm ci

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{vars.ROLE_TO_ASSUME}}
        role-session-name: ${{ vars.ROLE_SESSION_NAME }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy with Serverless Framework
      uses: serverless/github-action@v3.2
      with:
        args: deploy --stage=${{ vars.ENVIRONMENT }}
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SECURITY_GROUP_ID_1: ${{ vars.SECURITY_GROUP_ID_1}}
        SUBNET_ID_1: ${{ vars.SUBNET_ID_1}}
        SUBNET_ID_2: ${{ vars.SUBNET_ID_2}}
        SUBNET_ID_3: ${{ vars.SUBNET_ID_3}}
